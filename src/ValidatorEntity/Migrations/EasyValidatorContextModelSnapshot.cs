// <auto-generated />
using EasyValidator.Entity;
using EasyValidator.Entity.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ValidatorEntity.Migrations
{
    [DbContext(typeof(EasyValidatorContext))]
    partial class EasyValidatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("EasyValidator.Entity.Models.QFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlfrescoUuid");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Creator");

                    b.Property<string>("DescriptionFormat");

                    b.Property<string>("FinalName");

                    b.Property<string>("FinalPath");

                    b.Property<string>("LocalFileName");

                    b.Property<string>("NameFormat");

                    b.Property<string>("OriginalFileName");

                    b.Property<string>("PathFormat");

                    b.Property<int>("Status");

                    b.Property<string>("Template");

                    b.Property<string>("TitleFormat");

                    b.Property<DateTime>("UploadDate");

                    b.Property<string>("Uuid");

                    b.Property<DateTime>("ValidateDate");

                    b.Property<string>("Validator");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("Uuid");

                    b.ToTable("QFiles");
                });

            modelBuilder.Entity("EasyValidator.Entity.Models.QProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateTimeValue");

                    b.Property<string>("Name");

                    b.Property<float>("NumberValue");

                    b.Property<int>("PropertyType");

                    b.Property<int>("QFileId");

                    b.Property<string>("StringValue");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("QFileId");

                    b.ToTable("QProperties");
                });

            modelBuilder.Entity("EasyValidator.Entity.Models.QReconcile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("Creator");

                    b.Property<DateTime>("DocumentDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("ObjectType");

                    b.Property<string>("Reference");

                    b.Property<string>("Reference1");

                    b.Property<string>("Reference2");

                    b.Property<string>("Site");

                    b.Property<string>("TCode");

                    b.HasKey("Id");

                    b.ToTable("QReconciles");
                });

            modelBuilder.Entity("EasyValidator.Entity.Models.QRejectReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("QFileId");

                    b.Property<string>("ReasonId");

                    b.HasKey("Id");

                    b.HasIndex("QFileId");

                    b.ToTable("QRejectReasons");
                });

            modelBuilder.Entity("EasyValidator.Entity.Models.QTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Template");

                    b.Property<string>("ValidationChecklistsText");

                    b.Property<string>("ValidationKey");

                    b.Property<bool>("ValidationRequire");

                    b.HasKey("Id");

                    b.HasIndex("Template");

                    b.HasIndex("ValidationRequire");

                    b.ToTable("QTemplates");
                });

            modelBuilder.Entity("EasyValidator.Entity.Models.QProperty", b =>
                {
                    b.HasOne("EasyValidator.Entity.Models.QFile", "QFile")
                        .WithMany()
                        .HasForeignKey("QFileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyValidator.Entity.Models.QRejectReason", b =>
                {
                    b.HasOne("EasyValidator.Entity.Models.QFile", "QFile")
                        .WithMany()
                        .HasForeignKey("QFileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
